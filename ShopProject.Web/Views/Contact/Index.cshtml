@model ShopProject.Web.Models.FeedbackViewModel
@using BotDetect.Web.Mvc;

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section footerJS{
    <!--Map-->
    <script>
    function initMap() {

        var uluru = { lat: parseFloat($('#hidLat').val()), lng: parseFloat($('#hidLng').val()) };
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 17,
            center: uluru
        });

        var contentString = $('#hidAddress').val();

        var infowindow = new google.maps.InfoWindow({
            content: contentString
        });

        var marker = new google.maps.Marker({
            position: uluru,
            map: map,
            title: $('#hidName').val()
        });
        infowindow.open(map, marker);
    }
    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCZE8lAK99v62nAZj-tZlwMc7rKqEbWs-s&callback=initMap"></script>
    <!--capcha-->
    <script type="text/javascript">
    (function () {
        $.validator.setDefaults({
            // only validate fields when the form is submitted:
            // the Captcha input must only be validated when the whole code string is
            // typed in, not after each individual character (onkeyup must be false);
            // onfocusout validation could be left on in more complex forms, but
            // doesn't fit this example
            onkeyup: false,
            onfocusout: false,
            // always reload the Captcha image if remote validation failed,
            // since it will not be usable any more (a failed validation attempt
            // removes the attempted code for necessary Captcha security
            showErrors: function (errorMap, errorList) {
                for (var i = 0; i < errorList.length; i++) {
                    var element = errorList[i].element;
                    var message = errorList[i].message;
                    // check element css class and does the error message match remote
                    // validation failure
                    if (element.className.match(/captchaVal/) &&
                        message === this.settings.messages[element.id].remote) {
                        element.Captcha.ReloadImage();
                        $("form").valid();
                    }
                }
            }
        });
    })();


    $(document).ready(function () {
        // add validation rules by CSS class, so we don't have to know the
        // exact client id of the Captcha code textbox
        $(".captchaVal").rules('add', {
            required: true,
            remote: $(".captchaVal").get(0).Captcha.ValidationUrl,
            messages: {
                required: "Your input doesn't match displayed characters",
                remote: "Incorrect code, please try again"
            }
        });
    });
    </script>
}
<style>
    #map {
        height: 300px;
    }
</style>

<link href="@BotDetect.Web.CaptchaUrls.Absolute.LayoutStyleSheetUrl" rel="stylesheet" type="text/css" />

<input type="hidden" id="hidAddress" value="@Model.ContactDetail.Name<br />Điện thoại:@Model.ContactDetail.Phone <br>Địa chỉ: @Model.ContactDetail.Address" />
<input type="hidden" id="hidLat" value="@Model.ContactDetail.Lat" />
<input type="hidden" id="hidLng" value="@Model.ContactDetail.Lng" />
<input type="hidden" id="hidName" value="@Model.ContactDetail.Name" />
<div class="main">
    <div class="reservation_top">
        <div class="contact_right">
            @if (ViewData["SuccessMsg"] != null)
            {
                <div class="alert alert-success" role="alert">
                    <strong>Cảm ơn bạn! </strong> gửi phản hồi tới chúng tôi.
                    <br />Chúng tôi sẽ liên hệ lại sớm nhất có thể.
                </div>
            }
            <h3>Thông tin liên hệ</h3>
            <address class="address">
                <p>@Model.ContactDetail.Address</p>
                <dl>
                    <dt> </dt>
                    <dd>Điện thoại:<span> @Model.ContactDetail.Phone</span></dd>
                    <dd>E-mail:&nbsp; <a href="mailto:@(Model.ContactDetail.Email)">@(Model.ContactDetail.Email)</a></dd>
                </dl>
            </address>
            <div class="clearfix"></div>
            <div id="map"></div>
        </div>
    </div>
    <div class="reservation_top">
        <div class="contact_right">
            <h3>Gửi thông tin liên hệ</h3>
            <div class="contact-form">
                @using (Html.BeginForm("SendFeedback", "Contact", FormMethod.Post, new { role = "form" }))
                {
                    @Html.AntiForgeryToken()

                    @Html.ValidationSummary(true);
                    @Html.TextBoxFor(model => model.Name, new { @class = "textbox", @placeholder = "Thông tin họ và tên ...", name = "Name" });
                    @Html.ValidationMessageFor(model => model.Name)
                    @Html.TextBoxFor(model => model.Email, new { @class = "textbox", @placeholder = "Thông tin địa chỉ email...", name = "Email" });
                    @Html.ValidationMessageFor(model => model.Email)
                    @Html.TextAreaFor(model => model.Message, new { @placeholder = "Thông tin phản hồi...", name = "Message" });
                    @Html.ValidationMessageFor(model => model.Message)


                    MvcCaptcha registrationCaptcha = Shopproject.Common.CaptchaHelper.GetRegistrationCaptcha();
                    if (!registrationCaptcha.IsSolved)
                    {
                        <div class="form-group">
                            <div class="col-md-offset-4 col-md-8">
                                @Html.Captcha(registrationCaptcha)
                            </div>

                            @Html.Label("Nhập Capcha:", new
                       {
                           @class = "col-md-4 control-label",
                           @for = "CaptchaCode"
                       })

                            <div class="col-md-8">
                                @Html.TextBox("CaptchaCode", null, new { @class = "captchaVal" })
                            </div>
                        </div>
                    }

                    <input type="submit" value="Gửi đi">
                    <div class="clearfix"> </div>
                }
            </div>
        </div>
    </div>
</div>

